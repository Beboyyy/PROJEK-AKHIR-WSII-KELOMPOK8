{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mufti shofi\\\\Pictures\\\\ProjectAkhir\\\\Frontend\\\\src\\\\pages\\\\Buku.js\";\nimport React, { Component } from 'react';\nimport Card from \"../components/Card\";\nimport $ from 'jquery';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Buku extends Component {\n  constructor() {\n    super();\n\n    this.setUser = () => {\n      // cek eksistensi dari local storage\n      if (localStorage.getItem(\"user\") === null) {\n        // kondisi jika local storage \"user\" belum dibuat\n        let prompt = window.prompt(\"Masukkan Nama Anda\", \"\");\n\n        if (prompt === null || prompt === \"\") {\n          // jika user tidak mengisikan namanya\n          this.setUser();\n        } else {\n          // jika user telah mengisikan namanya\n          // simpan nama user ke local storage\n          localStorage.setItem(\"user\", prompt); // simpan nama user ke state.user\n\n          this.setState({\n            user: prompt\n          });\n        }\n      } else {\n        // kondisi saat local storage \"user\" telah dibuat\n        // akses nilai dari local storage \"user\"\n        let name = localStorage.getItem(\"user\");\n        this.setState({\n          user: name\n        });\n      }\n    };\n\n    this.Close = () => {\n      $(\"#modal\").hide();\n    };\n\n    this.Save = event => {\n      event.preventDefault();\n      const {\n        isbn,\n        judul,\n        penulis,\n        penerbit,\n        harga,\n        cover,\n        action,\n        selectedItem\n      } = this.state; // Define your API endpoint for adding or updating a book\n\n      const apiUrl = action === 'insert' ? 'http://localhost:3001/api/books' : `http://localhost:3001/api/books/${selectedItem.isbn}`;\n      fetch(apiUrl, {\n        method: action === 'insert' ? 'POST' : 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          isbn,\n          judul,\n          penulis,\n          penerbit,\n          harga,\n          cover\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data.message); // Update state or perform any other actions as needed\n\n        if (action === 'insert') {\n          this.setState(prevState => ({\n            buku: [...prevState.buku, {\n              isbn,\n              judul,\n              penulis,\n              penerbit,\n              harga,\n              cover\n            }],\n            filterBuku: [...prevState.buku, {\n              isbn,\n              judul,\n              penulis,\n              penerbit,\n              harga,\n              cover\n            }]\n          }));\n        } else if (action === 'update') {\n          const updatedBooks = prevState.buku.map(book => book.isbn === selectedItem.isbn ? {\n            isbn,\n            judul,\n            penulis,\n            penerbit,\n            harga,\n            cover\n          } : book);\n          this.setState({\n            buku: updatedBooks,\n            filterBuku: updatedBooks\n          });\n        }\n      }).catch(error => console.error('Error saving book:', error)); // Close the modal\n\n      $(\"#modal\").hide();\n    };\n\n    this.Delete = isbn => {\n      if (window.confirm('Apakah anda yakin ingin menghapus data ini?')) {\n        fetch(`http://localhost:3001/api/books/${isbn}`, {\n          method: 'DELETE'\n        }).then(response => response.json()).then(data => {\n          console.log(data.message); // Update state or perform any other actions as needed\n\n          const updatedBooks = this.state.buku.filter(book => book.isbn !== isbn);\n          this.setState({\n            buku: updatedBooks,\n            filterBuku: updatedBooks\n          });\n        }).catch(error => console.error('Error deleting book:', error));\n      }\n    };\n\n    this.state = {\n      action: \"\",\n      isbn: \"\",\n      judul: \"\",\n      penulis: \"\",\n      penerbit: \"\",\n      harga: 0,\n      cover: \"\",\n      selectedItem: null\n    };\n    this.state.filterBuku = this.state.buku;\n  }\n\n  componentDidMount() {\n    this.setUser();\n  }\n\n  componentDidMount() {\n    // Fetch books from the backend\n    fetch('http://localhost:3001/api/books').then(response => response.json()).then(data => {\n      this.setState({\n        buku: data.books,\n        filterBuku: data.books\n      });\n    }).catch(error => console.error('Error fetching books:', error));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"display-6\",\n          children: [\"Welcome, \", this.state.user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"desc\",\n        children: \"Explore your favourite books and get your new book collection with the best price.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 125\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addbook btn btn-dark btn-lg\",\n          onClick: () => this.Add(),\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"16\",\n            height: \"16\",\n            fill: \"currentColor\",\n            class: \"bi bi-plus-circle\",\n            viewBox: \"0 0 16 16\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), \" Add New Book\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: this.state.keyword,\n              onChange: ev => this.setState({\n                keyword: ev.target.value\n              }),\n              onKeyUp: ev => this.searching(ev),\n              class: \"form-control form-input\",\n              placeholder: \"Find the book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: this.state.filterBuku.map((item, index) => /*#__PURE__*/_jsxDEV(Card, {\n          judul: item.judul,\n          isbn: item.isbn,\n          penulis: item.penulis,\n          penerbit: item.penerbit,\n          harga: item.harga,\n          cover: item.cover,\n          onEdit: () => this.Edit(item),\n          onDrop: () => this.Drop(item),\n          onCart: () => this.addToCart(item)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal modal\",\n        id: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"modal-dialog\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                class: \"modal-title\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Book Data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 61\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn-close\",\n                \"data-bs-dismiss\": \"modal\",\n                \"aria-label\": \"Close\",\n                onClick: () => this.Close()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"modal-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: ev => this.Save(ev),\n                children: [\"Judul Buku\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control mb-2\",\n                  value: this.state.judul,\n                  onChange: ev => this.setState({\n                    judul: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 37\n                }, this), \"ISBN\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control mb-2\",\n                  value: this.state.isbn,\n                  onChange: ev => this.setState({\n                    isbn: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this), \"Penulis Buku\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control mb-2\",\n                  value: this.state.penulis,\n                  onChange: ev => this.setState({\n                    penulis: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 37\n                }, this), \"Penerbit Buku\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control mb-2\",\n                  value: this.state.penerbit,\n                  onChange: ev => this.setState({\n                    penerbit: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 37\n                }, this), \"Harga Buku\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"form-control mb-2\",\n                  value: this.state.harga,\n                  onChange: ev => this.setState({\n                    harga: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 37\n                }, this), \"Cover Buku\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"url\",\n                  className: \"form-control mb-2\",\n                  value: this.state.cover,\n                  onChange: ev => this.setState({\n                    cover: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-dark btn-block\",\n                  type: \"submit\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mufti shofi/Pictures/ProjectAkhir/Frontend/src/pages/Buku.js"],"names":["React","Component","Card","$","Buku","constructor","setUser","localStorage","getItem","prompt","window","setItem","setState","user","name","Close","hide","Save","event","preventDefault","isbn","judul","penulis","penerbit","harga","cover","action","selectedItem","state","apiUrl","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","message","prevState","buku","filterBuku","updatedBooks","map","book","catch","error","Delete","confirm","filter","componentDidMount","books","render","Add","keyword","ev","target","value","searching","item","index","Edit","Drop","addToCart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Card from \"../components/Card\";\r\nimport $ from 'jquery';\r\nimport '../index.css';\r\n\r\n\r\nexport default class Buku extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            action: \"\",\r\n            isbn: \"\",\r\n            judul: \"\",\r\n            penulis: \"\",\r\n            penerbit: \"\",\r\n            harga: 0,\r\n            cover: \"\",\r\n            selectedItem: null,\r\n        }\r\n        this.state.filterBuku = this.state.buku\r\n\r\n\r\n    }\r\n\r\n    setUser = () => {\r\n        // cek eksistensi dari local storage\r\n        if(localStorage.getItem(\"user\") === null){\r\n        // kondisi jika local storage \"user\" belum dibuat\r\n        let prompt = window.prompt(\"Masukkan Nama Anda\",\"\")\r\n        if(prompt === null || prompt === \"\"){\r\n        // jika user tidak mengisikan namanya\r\n        this.setUser()\r\n        }else{\r\n        // jika user telah mengisikan namanya\r\n        // simpan nama user ke local storage\r\n        localStorage.setItem(\"user\", prompt)\r\n        // simpan nama user ke state.user\r\n        this.setState({user: prompt})\r\n        }\r\n        }else{\r\n        // kondisi saat local storage \"user\" telah dibuat\r\n        // akses nilai dari local storage \"user\"\r\n        let name = localStorage.getItem(\"user\")\r\n        this.setState({user: name})\r\n        }\r\n        }\r\n\r\n        componentDidMount(){\r\n            this.setUser()\r\n            }\r\n\r\n    Close = () =>{\r\n        $(\"#modal\").hide()\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Fetch books from the backend\r\n        fetch('http://localhost:3001/api/books')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ buku: data.books, filterBuku: data.books });\r\n            })\r\n            .catch(error => console.error('Error fetching books:', error));\r\n    }\r\n\r\n    Save = (event) => {\r\n        event.preventDefault();\r\n        const { isbn, judul, penulis, penerbit, harga, cover, action, selectedItem } = this.state;\r\n\r\n        // Define your API endpoint for adding or updating a book\r\n        const apiUrl = action === 'insert' ? 'http://localhost:3001/api/books' : `http://localhost:3001/api/books/${selectedItem.isbn}`;\r\n\r\n        fetch(apiUrl, {\r\n            method: action === 'insert' ? 'POST' : 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ isbn, judul, penulis, penerbit, harga, cover }),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data.message);\r\n\r\n                // Update state or perform any other actions as needed\r\n                if (action === 'insert') {\r\n                    this.setState(prevState => ({\r\n                        buku: [...prevState.buku, { isbn, judul, penulis, penerbit, harga, cover }],\r\n                        filterBuku: [...prevState.buku, { isbn, judul, penulis, penerbit, harga, cover }],\r\n                    }));\r\n                } else if (action === 'update') {\r\n                    const updatedBooks = prevState.buku.map(book =>\r\n                        book.isbn === selectedItem.isbn\r\n                            ? { isbn, judul, penulis, penerbit, harga, cover }\r\n                            : book\r\n                    );\r\n                    this.setState({ buku: updatedBooks, filterBuku: updatedBooks });\r\n                }\r\n            })\r\n            .catch(error => console.error('Error saving book:', error));\r\n\r\n        // Close the modal\r\n        $(\"#modal\").hide();\r\n    };\r\n\r\n    Delete = (isbn) => {\r\n        if (window.confirm('Apakah anda yakin ingin menghapus data ini?')) {\r\n            fetch(`http://localhost:3001/api/books/${isbn}`, {\r\n                method: 'DELETE',\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data.message);\r\n\r\n                    // Update state or perform any other actions as needed\r\n                    const updatedBooks = this.state.buku.filter(book => book.isbn !== isbn);\r\n                    this.setState({ buku: updatedBooks, filterBuku: updatedBooks });\r\n                })\r\n                .catch(error => console.error('Error deleting book:', error));\r\n        }\r\n    };z\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\"> <br></br>\r\n            <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <span className=\"display-6\">Welcome, { this.state.user }</span>\r\n                </h4>\r\n                <h6 className='desc'>Explore your favourite books and get your new book collection with the best price.</h6><br></br>\r\n                <div class=\"container\">\r\n                <button className=\"addbook btn btn-dark btn-lg\" onClick={() => this.Add()} data-toggle=\"modal\" data-target=\"#modal\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-plus-circle\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n                </svg> Add New Book\r\n                </button>\r\n                    <div class=\"col-md-5\">\r\n                        <div class=\"form\"><input type=\"text\" value={this.state.keyword}\r\n                            onChange={ev => this.setState({ keyword: ev.target.value })}\r\n                            onKeyUp={ev => this.searching(ev)} class=\"form-control form-input\" placeholder=\"Find the book\"/></div>\r\n                        </div>\r\n                </div>\r\n             \r\n        \r\n                \r\n                <div className=\"row\">\r\n                    {this.state.filterBuku.map((item, index) => (\r\n                        <Card\r\n                        key={index}\r\n                        judul={item.judul}\r\n                        isbn={item.isbn}\r\n                        penulis={item.penulis}\r\n                        penerbit={item.penerbit}\r\n                        harga={item.harga}\r\n                        cover={item.cover}\r\n                        onEdit={() => this.Edit(item)}\r\n                        onDrop={() => this.Drop(item)}\r\n                        onCart={ () => this.addToCart(item)}\r\n                    />\r\n                    ))}\r\n                </div>\r\n\r\n\r\n                {/* component modal sbg control manipulasi data */}\r\n                <div className=\"modal modal\" id=\"modal\">\r\n                        <div class=\"modal-dialog\">\r\n                            <div class=\"modal-content\">\r\n                                <div class=\"modal-header\">\r\n                                    <h4 class=\"modal-title\"><b>Book Data</b></h4>\r\n                                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={() => this.Close()}></button>\r\n                                </div>\r\n                                <div class=\"modal-body\">\r\n                                <form onSubmit={ev => this.Save(ev)}>\r\n                                    Judul Buku\r\n                                    <input type=\"text\" className=\"form-control mb-2\"\r\n                                        value={this.state.judul}\r\n                                        onChange={ev => this.setState({ judul: ev.target.value })}\r\n                                        required />\r\n                                    \r\n                                    ISBN\r\n                                    <input type=\"text\" className=\"form-control mb-2\"\r\n                                        value={this.state.isbn}\r\n                                        onChange={ev => this.setState({ isbn: ev.target.value })}\r\n                                        required />\r\n\r\n                                    Penulis Buku\r\n                                    <input type=\"text\" className=\"form-control mb-2\"\r\n                                        value={this.state.penulis}\r\n                                        onChange={ev => this.setState({ penulis: ev.target.value })}\r\n                                        required />\r\n\r\n                                    Penerbit Buku\r\n                                    <input type=\"text\" className=\"form-control mb-2\"\r\n                                        value={this.state.penerbit}\r\n                                        onChange={ev => this.setState({ penerbit: ev.target.value })}\r\n                                        required />\r\n\r\n                                    Harga Buku\r\n                                    <input type=\"number\" className=\"form-control mb-2\"\r\n                                        value={this.state.harga}\r\n                                        onChange={ev => this.setState({ harga: ev.target.value })}\r\n                                        required />\r\n\r\n                                    Cover Buku\r\n                                    <input type=\"url\" className=\"form-control mb-2\"\r\n                                        value={this.state.cover}\r\n                                        onChange={ev => this.setState({ cover: ev.target.value })}\r\n                                        required />\r\n\r\n                                    <button className=\"btn btn-dark btn-block\" type=\"submit\">\r\n                                        Save\r\n                                    </button>\r\n                                </form>\r\n                                    <br></br>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}